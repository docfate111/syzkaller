
include <uapi/linux/mei.h>
include <uapi/asm/ioctl.h>
include <uapi/linux/fctnl.h>

resource fd_mei[fd]

openat$mei(fd const[AT_FDCWD], file ptr[in, string["/dev/mei0"]], flags const[O_RDWR], mode const[0]) fd_mei
ioctl$IOCTL_MEI_CONNECT_CLIENT(fd fd_mei, IOCTL_MEI_CONNECT_CLIENT, arg ptr[in, mei_connect_client_data])
ioctl$IOCTL_MEI_CONNECT_CLIENT_VTAG(fd fd_mei, IOCTL_MEI_CONNECT_CLIENT_VTAG, arg ptr[in, mei_connect_client_data_vtag])
ioctl$IOCTL_MEI_NOTIFY_SET(fd fd_mei, IOCTL_MEI_NOTIFY_SET, arg int32)
ioctl$IOCTL_MEI_NOTIFY_GET(fd fd_mei, IOCTL_MEI_NOTIFY_GET, arg int32)
read$mei(fd fd_mei, buf buffer[out], count len[buf]) 
write$mei(fd fd_mei, buf buffer[in], count len[buf])
fsync$mei(fd fd_mei)
fasync$mei(fd fd_mei)

mei_connect_client_data {
		in_client_uuid int32
                out_client_properties mei_client
}

mei_client {
	max_msg_length int32
	protocol_version int8
	reserved array[int8, 3]
}

mei_connect_client_vtag {
	in_client_uuid int32
	vtag int8
	reserved array[int8, 3]
}

mei_connect_client_data_vtag {    
	connect mei_connect_client_vtag
	out_client_properties mei_client
}
